$palettes: (primary, neutral, danger, info, success, warning);
$variants: (plain, outlined, soft, solid);
$states: (Hover, Active, Disabled);
$attributes: (Color, Bg, Border);

@each $palette in $palettes {
    [psc='Joy/Palette/$(palette)'] {
        @each $variant in $variants {
            @each $attribute in $attributes {
                /* prettier-ignore */
                --variant-$(variant)$(attribute): var(
                    --palette-$(palette)-$(variant)$(attribute)
                );

                @each $state in $states {
                    /* prettier-ignore */
                    --variant-$(variant)$(state)$(attribute): var(
                        --palette-$(palette)-$(variant)$(state)$(attribute),
                        var(--palette-$(palette)-$(variant)$(attribute))
                    );
                }
            }
        }
    }
}

@mixin palette-default($component, $palette: primary) {
    &:not(
            :where(
                    [psc='Joy/Palette/danger'],
                    [psc='Joy/Palette/info'],
                    [psc='Joy/Palette/neutral'],
                    [psc='Joy/Palette/primary'],
                    [psc='Joy/Palette/success'],
                    [psc='Joy/Palette/warning']
                )
        ) {
        @each $variant in $variants {
            @each $property in $drivenProperties {
                /* prettier-ignore */
                --$(component)-default-$(variant)$(property): var(
                    --palette-$(palette)-$(variant)$(property)
                );

                @each $state in $states {
                    /* prettier-ignore */
                    --$(component)-default-$(variant)$(state)$(property): var(
                        --palette-$(palette)-$(variant)$(state)$(property),
                        var(--palette-$(palette)-$(variant)$(property))
                    );
                }
            }

            @each $property in $staticProperties {
                --$(component)-default-$(variant)-$(property): var(
                    --variant-$(variant)-$(property)
                );
            }
        }
    }
}
